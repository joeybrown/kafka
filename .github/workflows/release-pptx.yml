name: Build and Release PPTX

on:
  push:
    tags:
      - "v*" # Trigger on version tags like v1.0.0, v1.2.3, etc.
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24.7.0"
          cache: "yarn"

      - name: Install Yarn
        run: npm install -g yarn@1.22.22

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Marp CLI
        run: yarn install:marp

      - name: Build PPTX presentation
        run: |
          # Create dist directory
          mkdir -p ./dist

          # Generate HTML first (more reliable)
          npx @marp-team/marp-cli@latest ./src/kafka-introduction.md --html --output ./dist/kafka-introduction.html

          # Try PPTX generation with additional options
          npx @marp-team/marp-cli@latest ./src/kafka-introduction.md \
            --pptx \
            --output ./dist/kafka-introduction.pptx \
            --theme default \
            --allow-local-files

      - name: Get tag name
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Asset
        run: |
          gh release create ${{ steps.get_tag.outputs.TAG_NAME }} \
            --title "Release ${{ steps.get_tag.outputs.TAG_NAME }}" \
            --notes "## Kafka Introduction Presentation

          This release contains the PowerPoint (PPTX) version of the Kafka introduction presentation.

          ### What's included:
          - **kafka-introduction.pptx** - The main presentation file

          ### How to use:
          1. Download the PPTX file from the assets below
          2. Open with Microsoft PowerPoint, LibreOffice Impress, or any compatible presentation software

          ### Source:
          Built from the markdown source in the \`src/\` directory using Marp." \
            ./dist/kafka-introduction.pptx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete previous releases
        run: |
          gh release list --limit 10 --json tagName | \
          jq -r '.[].tagName' | \
          grep -v "${{ steps.get_tag.outputs.TAG_NAME }}" | \
          xargs -I {} gh release delete {} --yes || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
